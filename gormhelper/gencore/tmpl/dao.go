package tmpl

// dao基类
const DefaultBaseDaoTemplate = `
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package {{.PackageName}}

import (
	"context"
	"cq-partner-api/app/plugins/gormhook"
	"gorm.io/gorm"
	"sync"
)

var (
	syncOnceDefault sync.Once
	defaultDB       *gorm.DB
)

/*
* @Description: 连接池
* @Author: gorm.io/gen
* @Param ctx
* @Return *gorm.DB
* @Date {{.DateTime}}
 */
func NewDefaultConn(ctx context.Context) *gorm.DB {
	syncOnceDefault.Do(func() {
		defaultDB = gormhook.GetGlobalHookInstance()
	})
	return defaultDB.WithContext(ctx)
}
`

const DefaultDaoTemplate = `
package {{.PackageName}}

import (
	"context"
	"{{.ModelPath}}"
	"{{.QueryPath}}"
	"gorm.io/gorm"
)


type {{.DaoName}}Dao struct {
	ctx         context.Context
	defaultConn *gorm.DB
	query       query.IPartnerGoodsModelDo
}

func New{{.DaoName}}Dao(ctx context.Context) {{.DaoName}}Dao {
	return PartnerGoodsDao{
		ctx:         ctx,
		defaultConn: NewDefaultConn(ctx),
		query:       query.NewDefaultQueryCtx(ctx).{{.ModelName}},
	}
}

func ({{.S}} {{.DaoName}}Dao) GetTransQueryDao(tx *query.Query) {{.DaoName}}Dao  {
	return PartnerGoodsDao{
		ctx:   p.ctx,
		query: tx.WithContext(p.ctx).{{.ModelName}},
	}
}



`
